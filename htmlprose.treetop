grammar HtmlProse
  rule statement
    comment / askforelement <Statement> #/ setproperty <Statement>
  end
  
  rule comment
    '#' .*
  end
  
  rule askforelement
    'give' space 'me' space declaration <AskForElement>
  end
  
  rule declaration
    quantity space element <Declaration>
  end
  
  rule quantity
    number / numberword <Quantity>
  end
  
  rule numberword
    singular / plural <NumberWord>
  end
  
  rule singular
    ('a' / 'one') 'single'? <SingularNumberWord>
  end
  
  rule plural
    'two' / 'three' / 'four' / 'five' / 'six' / 'seven' / 'eight' / 'nine' / 'ten' <PluralNumberWord>
  end
  
  rule element
    adjective space tag space properties space contents <Element>
  end
  
  rule adjective
    color / size / adjective space? ',' space adjective / adjective space 'and' space adjective <Adjective>
  end
  
  # rule setproperty
    # 'Set'
  # end
  
  rule dimension
    metric ('tall' / 'high' / 'wide' / 'long') <Dimension>
  end
  
  rule metric
    size / percent <Metric>
  end
  
  rule color
    color_word / rgb / hsl / hex <Color>
  end
  
  rule properties
    ('that' / 'which') space 'is' property ((',' space property) 0.. (space 'and' space property) 0.. ) <Properties>
  end
  
  rule property
    color / dimension <Property>
  end
  
  rule contents
    ('containing' / 'holding' / 'that' space 'has' / 'with') space declaration space (('in' / 'inside') space 'it')? <Contents>
  end
  
  
  
  # Literals
  rule color_word # CSS defined color words
    'alice-blue' / 'antique-white' / 'aqua' / 'aquamarine' / 'azure' / 'beige' / 'bisque' / 'black' / 'blanched-almond' / 'blue' / 'blue-violet' / 'brown' / 'burly-wood' / 'cadet-blue' / 'chartreuse' / 'chocolate' / 'coral' / 'cornflower-blue' / 'cornsilk' / 'crimson' / 'cyan' / 'dark-blue' / 'dark-cyan' / 'dark-goldenrod' / 'dark-gray' / 'dark-green' / 'dark-khaki' / 'dark-magenta' / 'dark-olivegreen' / 'dark-orange' / 'dark-orchid' / 'dark-red' / 'dark-salmon' / 'dark-seagreen' / 'dark-slateblue' / 'dark-slategray' / 'dark-turquoise' / 'dark-violet' / 'deep-pink' / 'deep-skyblue' / 'dim-gray' / 'dodger-blue' / 'fire-brick' / 'floral-white' / 'forest-green' / 'fuchsia' / 'gainsboro' / 'ghost-white' / 'gold' / 'golden-rod' / 'gray' / 'green' / 'green-yellow' / 'honey-dew' / 'hot-pink' / 'indian-red' / 'indigo' / 'ivory' / 'khaki' / 'lavender' / 'lavender-blush' / 'lawn-green' / 'lemon-chiffon' / 'light-blue' / 'light-coral' / 'light-cyan' / 'light-goldenrod-yellow' / 'light-gray' / 'light-green' / 'light-pink' / 'light-salmon' / 'light-seagreen' / 'light-skyblue' / 'light-slategray' / 'light-steelblue' / 'light-yellow' / 'lime' / 'lime-green' / 'linen' / 'magenta' / 'maroon' / 'medium-aquamarine' / 'medium-blue' / 'medium-orchid' / 'medium-purple' / 'medium-seagreen' / 'medium-slateblue' / 'medium-springgreen' / 'medium-turquoise' / 'medium-violetred' / 'midnight-blue' / 'mint-cream' / 'misty-rose' / 'moccasin' / 'navajo-white' / 'navy' / 'old-lace' / 'olive' / 'olive-drab' / 'orange' / 'orange-red' / 'orchid' / 'pale-goldenrod' / 'pale-green' / 'pale-turquoise' / 'pale-violetred' / 'papaya-whip' / 'peach-puff' / 'peru' / 'pink' / 'plum' / 'powder-blue' / 'purple' / 'red' / 'rosy-brown' / 'royal-blue' / 'saddle-brown' / 'salmon' / 'sandy-brown' / 'sea-green' / 'sea-shell' / 'sienna' / 'silver' / 'sky-blue' / 'slate-blue' / 'slate-gray' / 'snow' / 'spring-green' / 'steel-blue' / 'tan' / 'teal' / 'thistle' / 'tomato' / 'turquoise' / 'violet' / 'wheat' / 'white' / 'white-smoke' / 'yellow' / 'yellow-green' <ColorWordLiteral>
  end
  
  rule rgb
    'rgb(' space integer space ',' space integer space ',' space integer space ')' <RGBLiteral>
  end
  
  rule rgba
    'rgba(' space integer space ',' space integer space ',' space integer space ',' float space ')' <RGBALiteral>
  end
  
  rule hsl
    'hsl(' space integer space ',' space percent space ',' space percent space ')' <HSLLiteral>
  end
  
  rule hsla
    'hsla(' space integer space ',' space percent space ',' space percent space ',' float space ')' <HSLALiteral>
  end
  
  rule hex
    '#' ([0-9A-Fa-f] 3..3 / [0-9A-Fa-f] 6..6) <HexLiteral>
  end
  
  rule tag
    'a' / 'abbr' / 'acronym' / 'address' / 'applet' / 'area' / 'article' / 'aside' / 'audio' / 'b' / 'base' / 'basefont' / 'bdi' / 'bdo' / 'big' / 'blockquote' / 'body' / 'br' / 'button' / 'canvas' / 'caption' / 'center' / 'cite' / 'code' / 'col' / 'colgroup' / 'command' / 'datalist' / 'dd' / 'del' / 'details' / 'dfn' / 'dialog' / 'dir' / 'div' / 'dl' / 'dt' / 'em' / 'embed' / 'fieldset' / 'figcaption' / 'figure' / 'font' / 'footer' / 'form' / 'frame' / 'frameset' / 'h1' / 'head' / 'header' / 'hr' / 'html' / 'i' / 'iframe' / 'img' / 'input' / 'ins' / 'kbd' / 'keygen' / 'label' / 'legend' / 'li' / 'link' / 'map' / 'mark' / 'menu' / 'meta' / 'meter' / 'nav' / 'noframes' / 'noscript' / 'object' / 'ol' / 'optgroup' / 'option' / 'output' / 'p' / 'param' / 'pre' / 'progress' / 'q' / 'rp' / 'rt' / 'ruby' / 's' / 'samp' / 'script' / 'section' / 'select' / 'small' / 'source' / 'span' / 'strike' / 'strong' / 'style' / 'sub' / 'summary' / 'sup' / 'table' / 'tbody' / 'td' / 'textarea' / 'tfoot' / 'th' / 'thead' / 'time' / 'title' / 'tr' / 'track' / 'tt' / 'u' / 'ul' / 'var' / 'video' / 'wbr' <HTML5TagLiteral>
  end
  
  rule number
    integer / float <NumberLiteral>
  end
  
  rule integer
    ('+' / '-')? [0-9]+ <IntegerLiteral>
  end
  
  rule float
    ('+' / '-')? [0-9]+ ('.' [0-9]+)? <FloatLiteral>
  end
  
  rule percent
    number '%' <Percent>
  end
  
  rule size
    number ('in'/ 'cm'/ 'mm'/ 'em'/ 'ex'/ 'pt'/ 'pc'/ 'px') <SizeLiteral>
  end
  
  rule space
    [\s]+
  end
end